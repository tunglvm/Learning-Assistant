// Qu·∫£n l√Ω tin nh·∫Øn
let chatHistory = [];

// G·ª≠i tin nh·∫Øn
async function sendMessage() {
    const messageInput = document.getElementById('messageInput');
    const message = messageInput.value.trim();
    
    if (message === '') return;
    
    // Th√™m tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng v√†o chat
    addMessage(message, 'user');
    messageInput.value = '';
    
    // Hi·ªÉn th·ªã tin nh·∫Øn ƒëang x·ª≠ l√Ω
    const loadingMessage = addMessage('ƒêang x·ª≠ l√Ω...', 'bot');
    
    try {
        // Ki·ªÉm tra xem c√≥ ph·∫£i l√† y√™u c·∫ßu t√≠nh to√°n kh√¥ng
        const calculationResult = await Calculator.processCalculation(message);
        
        if (calculationResult !== null) {
            // N·∫øu l√† ph√©p t√≠nh, hi·ªÉn th·ªã k·∫øt qu·∫£
            loadingMessage.querySelector('.message-content div:last-child').textContent = `K·∫øt qu·∫£: ${calculationResult}`;
        } else {
            // N·∫øu kh√¥ng ph·∫£i ph√©p t√≠nh, t√¨m c√¢u tr·∫£ l·ªùi trong knowledge base
            const answer = findAnswer(message);
            if (answer) {
                loadingMessage.querySelector('.message-content div:last-child').textContent = answer;
            } else {
                loadingMessage.querySelector('.message-content div:last-child').textContent = 'Xin l·ªói, t√¥i kh√¥ng hi·ªÉu c√¢u h·ªèi c·ªßa b·∫°n.';
            }
        }
    } catch (error) {
        console.error('L·ªói khi x·ª≠ l√Ω tin nh·∫Øn:', error);
        loadingMessage.querySelector('.message-content div:last-child').textContent = 'C√≥ l·ªói x·∫£y ra khi x·ª≠ l√Ω y√™u c·∫ßu c·ªßa b·∫°n.';
    }
}

// Th√™m tin nh·∫Øn v√†o giao di·ªán
function addMessage(message, sender) {
    const chatMessages = document.getElementById('chatMessages');
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${sender}-message`;
    
    const avatar = sender === 'user' ? 'üë§' : 'ü§ñ';
    const name = sender === 'user' ? 'B·∫°n' : 'AI Assistant';
    
    messageDiv.innerHTML = `
        <div class="message-content">
            <div class="message-header">
                <span class="message-avatar">${avatar}</span>
                <span class="message-name">${name}</span>
            </div>
            <div class="message-text">${message}</div>
        </div>
    `;
    
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
    
    // L∆∞u v√†o l·ªãch s·ª≠
    chatHistory.push({
        sender,
        message,
        timestamp: new Date().toISOString()
    });

    return messageDiv;
}

// ƒê·ªãnh d·∫°ng c√¢u tr·∫£ l·ªùi
function formatAnswer(answer) {
    return `
        <div class="answer-content">
            <div class="answer-text">${answer.answer}</div>
            <div class="answer-meta">
                <span class="subject">${answer.subject}</span>
                <span class="topic">${answer.topic}</span>
            </div>
        </div>
    `;
}

// ƒê·ªãnh d·∫°ng c√¢u tr·∫£ l·ªùi cho ph√©p t√≠nh
function formatCalculationAnswer(result) {
    return `
        <div class="answer-content calculation">
            <div class="answer-text">${result.answer}</div>
            <div class="calculation-details">
                <div class="detail-item">
                    <span class="label">Ph√©p t√≠nh:</span>
                    <span class="value">${result.details.operation}</span>
                </div>
                <div class="detail-item">
                    <span class="label">Kho·∫£ng:</span>
                    <span class="value">${result.details.range}</span>
                </div>
                <div class="detail-item">
                    <span class="label">K·∫øt qu·∫£:</span>
                    <span class="value">${result.details.result}</span>
                </div>
            </div>
        </div>
    `;
}

// X·ª≠ l√Ω s·ª± ki·ªán nh·∫•n Enter
document.addEventListener('DOMContentLoaded', function() {
    const messageInput = document.getElementById('messageInput');
    const sendBtn = document.getElementById('sendBtn');
    
    if (messageInput) {
        messageInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });
    }
    
    if (sendBtn) {
        sendBtn.addEventListener('click', sendMessage);
    }
});

// Th√™m style cho tin nh·∫Øn
const style = document.createElement('style');
style.textContent = `
    .message {
        margin: 10px 0;
        display: flex;
        flex-direction: column;
    }

    .user-message {
        align-items: flex-end;
    }

    .bot-message {
        align-items: flex-start;
    }

    .message-content {
        max-width: 70%;
        padding: 10px 15px;
        border-radius: 15px;
        background: #f0f2f5;
    }

    .user-message .message-content {
        background: #4a90e2;
        color: white;
    }

    .bot-message .message-content {
        background: #f0f2f5;
        color: #333;
    }

    .message-header {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 5px;
    }

    .message-avatar {
        font-size: 1.2em;
    }

    .message-name {
        font-weight: bold;
        font-size: 0.9em;
    }

    .message-text {
        word-wrap: break-word;
    }

    .welcome-message {
        text-align: center;
        padding: 20px;
        color: #666;
        font-style: italic;
    }
`;
document.head.appendChild(style);

// Th√™m style cho ph·∫ßn t√≠nh to√°n
const calculationStyle = document.createElement('style');
calculationStyle.textContent = `
    .calculation {
        background: #f8f9fa;
        border-radius: 15px;
        padding: 15px;
    }

    .calculation-details {
        margin-top: 10px;
        padding-top: 10px;
        border-top: 1px solid #e9ecef;
    }

    .detail-item {
        display: flex;
        justify-content: space-between;
        margin: 5px 0;
        font-size: 0.9em;
    }

    .detail-item .label {
        color: #666;
        font-weight: 500;
    }

    .detail-item .value {
        color: #4a90e2;
        font-weight: 600;
    }
`;
document.head.appendChild(calculationStyle);

// T√¨m c√¢u tr·∫£ l·ªùi ph√π h·ª£p
function findAnswer(message) {
    const lowerMessage = message.toLowerCase();
    
    // T√¨m ki·∫øm trong c∆° s·ªü ki·∫øn th·ª©c
    const knowledgeBase = window.AIKnowledge ? window.AIKnowledge.getKnowledgeBase() : [];
    
    // T√¨m ki·∫øm ch√≠nh x√°c
    const exactMatch = knowledgeBase.find(item => 
        item.keyword.toLowerCase() === lowerMessage
    );
    
    if (exactMatch) {
        return exactMatch.answer;
    }
    
    // T√¨m ki·∫øm m·ªôt ph·∫ßn
    const partialMatch = knowledgeBase.find(item => 
        lowerMessage.includes(item.keyword.toLowerCase()) ||
        item.keyword.toLowerCase().includes(lowerMessage)
    );
    
    if (partialMatch) {
        return partialMatch.answer;
    }
    
    // Tr·∫£ l·ªùi m·∫∑c ƒë·ªãnh n·∫øu kh√¥ng t√¨m th·∫•y
    return "Xin l·ªói, t√¥i kh√¥ng hi·ªÉu c√¢u h·ªèi c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ th·ª≠ di·ªÖn ƒë·∫°t l·∫°i ho·∫∑c h·ªèi v·ªÅ m·ªôt ch·ªß ƒë·ªÅ kh√°c.";
}

// X√≥a l·ªãch s·ª≠ chat
function clearChat() {
    const chatMessages = document.getElementById('chatMessages');
    chatMessages.innerHTML = `
        <div class="welcome-message">
            Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi AI Learning Assistant! <br>
            H√£y ƒë·∫∑t c√¢u h·ªèi v·ªÅ c√°c m√¥n h·ªçc ho·∫∑c y√™u c·∫ßu t√≠nh to√°n.
        </div>
    `;
    chatHistory = [];
}

// Th√™m ki·∫øn th·ª©c m·ªõi
AIKnowledge.addKnowledge(
    'physics',
    'mechanics',
    'ƒê·ªãnh lu·∫≠t Newton th·ª© nh·∫•t l√† g√¨?',
    'ƒê·ªãnh lu·∫≠t Newton th·ª© nh·∫•t (ƒë·ªãnh lu·∫≠t qu√°n t√≠nh): M·ªôt v·∫≠t s·∫Ω gi·ªØ nguy√™n tr·∫°ng th√°i ƒë·ª©ng y√™n ho·∫∑c chuy·ªÉn ƒë·ªông th·∫≥ng ƒë·ªÅu n·∫øu kh√¥ng c√≥ l·ª±c n√†o t√°c d·ª•ng l√™n n√≥.'
);

// T√¨m c√¢u tr·∫£ l·ªùi
const answer = AIKnowledge.findAnswer('ƒê·ªãnh lu·∫≠t Newton th·ª© nh·∫•t l√† g√¨?');
console.log(answer);
// K·∫øt qu·∫£: { answer: "...", subject: "V·∫≠t l√Ω", topic: "C∆° h·ªçc" } 